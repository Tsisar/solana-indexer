package events

// Code generated by generate_events.go; DO NOT EDIT.

import "github.com/near/borsh-go"

type EventDecoder func([]byte) (any, error)

func decode[T any](data []byte) (any, error) {
	var out T
	err := borsh.Deserialize(&out, data)
	return out, err
}

var Registry = map[string]EventDecoder{
	"EntryFeeUpdatedEvent":                  decode[EntryFeeUpdatedEvent],
	"PerformanceFeeUpdatedEvent":            decode[PerformanceFeeUpdatedEvent],
	"RedemptionFeeUpdatedEvent":             decode[RedemptionFeeUpdatedEvent],
	"DepositLimitSetEvent":                  decode[DepositLimitSetEvent],
	"EmergencyWithdrawEvent":                decode[EmergencyWithdrawEvent],
	"FundManagerDeployFundsEvent":           decode[FundManagerDeployFundsEvent],
	"FundManagerEmergencyWithdrawEvent":     decode[FundManagerEmergencyWithdrawEvent],
	"FundManagerFreeFundsEvent":             decode[FundManagerFreeFundsEvent],
	"FundManagerHarvestAndReportEvent":      decode[FundManagerHarvestAndReportEvent],
	"FundManagerStrategyStateUpdateEvent":   decode[FundManagerStrategyStateUpdateEvent],
	"HarvestAndReportDTFEvent":              decode[HarvestAndReportDTFEvent],
	"MinDeployAmountSetEvent":               decode[MinDeployAmountSetEvent],
	"OrcaAfterSwapEvent":                    decode[OrcaAfterSwapEvent],
	"OrcaInitEvent":                         decode[OrcaInitEvent],
	"SetPerformanceFeeEvent":                decode[SetPerformanceFeeEvent],
	"StrategyDeployFundsEvent":              decode[StrategyDeployFundsEvent],
	"StrategyDepositEvent":                  decode[StrategyDepositEvent],
	"StrategyFreeFundsEvent":                decode[StrategyFreeFundsEvent],
	"StrategyInitEvent":                     decode[StrategyInitEvent],
	"StrategyReallocEvent":                  decode[StrategyReallocEvent],
	"StrategyShutdownEvent":                 decode[StrategyShutdownEvent],
	"StrategyWithdrawEvent":                 decode[StrategyWithdrawEvent],
	"TotalInvestedUpdatedEvent":             decode[TotalInvestedUpdatedEvent],
	"StrategyReportedEvent":                 decode[StrategyReportedEvent],
	"UpdatedCurrentDebtForStrategyEvent":    decode[UpdatedCurrentDebtForStrategyEvent],
	"VaultAddStrategyEvent":                 decode[VaultAddStrategyEvent],
	"VaultDepositEvent":                     decode[VaultDepositEvent],
	"VaultEmergencyWithdrawEvent":           decode[VaultEmergencyWithdrawEvent],
	"VaultInitEvent":                        decode[VaultInitEvent],
	"VaultRemoveStrategyEvent":              decode[VaultRemoveStrategyEvent],
	"VaultShutDownEvent":                    decode[VaultShutDownEvent],
	"VaultUpdateAccountantEvent":            decode[VaultUpdateAccountantEvent],
	"VaultUpdateDepositLimitEvent":          decode[VaultUpdateDepositLimitEvent],
	"VaultUpdateDirectWithdrawEnabledEvent": decode[VaultUpdateDirectWithdrawEnabledEvent],
	"VaultUpdateMinTotalIdleEvent":          decode[VaultUpdateMinTotalIdleEvent],
	"VaultUpdateMinUserDepositEvent":        decode[VaultUpdateMinUserDepositEvent],
	"VaultUpdateProfitMaxUnlockTimeEvent":   decode[VaultUpdateProfitMaxUnlockTimeEvent],
	"VaultUpdateUserDepositLimitEvent":      decode[VaultUpdateUserDepositLimitEvent],
	"VaultUpdateWhitelistedOnlyEvent":       decode[VaultUpdateWhitelistedOnlyEvent],
	"VaultWithdrawlEvent":                   decode[VaultWithdrawlEvent],
	"WhitelistUpdatedEvent":                 decode[WhitelistUpdatedEvent],
	"WithdrawalRequestCanceledEvent":        decode[WithdrawalRequestCanceledEvent],
	"WithdrawalRequestFulfilledEvent":       decode[WithdrawalRequestFulfilledEvent],
	"WithdrawalRequestedEvent":              decode[WithdrawalRequestedEvent],
}
